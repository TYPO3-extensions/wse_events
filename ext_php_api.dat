a:2:{s:4:"meta";a:3:{s:5:"title";s:19:"WSE Eventmanagement";s:5:"descr";s:44:"Eventmanagement for WARPSTOCK EUROPE events.";s:7:"options";a:2:{s:10:"usageCount";N;s:19:"includeCodeAbstract";N;}}s:5:"files";a:18:{s:14:"MD5_006294a898";a:4:{s:8:"filename";s:33:"class.tx_wseevents_categories.php";s:8:"filesize";i:4020;s:6:"header";a:5:{s:4:"text";s:66:"

Class 'tx_wseevents_categories' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:4:{i:1;a:8:{s:6:"header";s:61:"class tx_wseevents_categories extends tx_wseevents_dbplugin {";s:5:"class";i:1;s:11:"parentClass";s:23:"tx_wseevents_categories";s:4:"cDat";a:5:{s:4:"text";s:66:"

Class 'tx_wseevents_categories' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:99;s:13:"content_lines";i:6;s:6:"atLine";i:54;}i:3;a:7:{s:6:"header";s:36:"function tx_wseevents_categories() {";s:11:"parentClass";s:23:"tx_wseevents_categories";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:22;s:13:"content_lines";i:3;s:6:"atLine";i:68;}i:5;a:4:{s:6:"header";s:23:"function main($items) {";s:11:"parentClass";s:23:"tx_wseevents_categories";s:4:"cDat";a:4:{s:4:"text";s:28:"

This is the main function
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:6:"atLine";i:79;}i:7;a:7:{s:6:"header";s:41:"function getTCAcategorylist($PA, $fobj) {";s:11:"parentClass";s:23:"tx_wseevents_categories";s:4:"cDat";a:4:{s:4:"text";s:25:"

Get list of categories
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}i:1;a:2:{i:0;s:6:"object";i:1;s:31:"$fobj: ToDo: insert description";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1543;s:13:"content_lines";i:55;s:6:"atLine";i:91;}}}s:14:"MD5_b52fc55e21";a:4:{s:8:"filename";s:31:"class.tx_wseevents_dbplugin.php";s:8:"filesize";i:25834;s:6:"header";a:5:{s:4:"text";s:64:"

Class 'tx_wseevents_dbplugin' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:27:{i:1;a:8:{s:6:"header";s:50:"class tx_wseevents_dbplugin extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:5:{s:4:"text";s:64:"

Class 'tx_wseevents_dbplugin' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:866;s:13:"content_lines";i:32;s:6:"atLine";i:71;}i:3;a:7:{s:6:"header";s:34:"function tx_wseevents_dbplugin() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:5;s:13:"content_lines";i:2;s:6:"atLine";i:111;}i:5;a:7:{s:6:"header";s:29:"function init($conf = null) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:350:"

Initializes the FE plugin stuff, read the configuration
and set the table names while we're at it.

It is harmless if this function gets called multiple times as it recognizes
this and ignores all calls but the first one.

This is merely a convenience function.

If the parameter is omited, the configuration for plugin.tx_seminar is used instead.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1955;s:13:"content_lines";i:64;s:6:"atLine";i:129;}i:7;a:7:{s:6:"header";s:49:"function getRecursiveUidList($parentUid, $depth){";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:65:"

Generates a list of pids of all sub pages for the given depth.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"integer";i:1;s:19:"the pid of the page";}i:1;a:2:{i:0;s:7:"integer";i:1;s:24:"the depth for the search";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:16:"the list of pids";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:547;s:13:"content_lines";i:22;s:6:"atLine";i:202;}i:9;a:7:{s:6:"header";s:38:"function removeCommonPages($pageList){";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:61:"

Removes all pages which have common content from pid list.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:19:"list with page pids";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:48:"the list of pids, without pages with common data";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:853;s:13:"content_lines";i:31;s:6:"atLine";i:232;}i:11;a:7:{s:6:"header";s:37:"function removeEventPages($pageList){";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:60:"

Removes all pages which have event content from pid list.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:19:"list with page pids";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:47:"the list of pids, without pages with event data";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:837;s:13:"content_lines";i:30;s:6:"atLine";i:271;}i:13;a:7:{s:6:"header";s:43:"function getCommonPids($pageUid, $pagePid){";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:42:"

Get all pages which have common content
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:8:"page uid";}i:1;a:2:{i:0;s:6:"string";i:1;s:8:"page pid";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:47:"the list of pids, without pages with event data";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:860;s:13:"content_lines";i:26;s:6:"atLine";i:310;}i:15;a:7:{s:6:"header";s:26:"function setTableNames() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:24:"

Sets the table names.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:973;s:13:"content_lines";i:25;s:6:"atLine";i:343;}i:17;a:7:{s:6:"header";s:27:"function setRecordTypes() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:25:"

Sets the record types.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:7:"private";}s:7:"content";s:0:"";s:12:"content_size";i:110;s:13:"content_lines";i:7;s:6:"atLine";i:375;}i:19;a:7:{s:6:"header";s:98:"function getConfValue($fieldName, $sheet = 'sDEF', $isFileName = false, $ignoreFlexform = false) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:217:"

Gets a value from flexforms or TS setup.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is returned. If there is no field with that name in TS setup,
an empty string is returned.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:64:"whether this is a filename, which has to be combined with a path";}i:3;a:2:{i:0;s:7:"boolean";i:1;s:93:"whether to ignore the flexform values and just get the settings from TypoScript, may be empty";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:73:"the value of the corresponding flexforms or TS setup entry (may be empty)";}s:6:"access";s:7:"private";}s:7:"content";s:0:"";s:12:"content_size";i:427;s:13:"content_lines";i:16;s:6:"atLine";i:396;}i:21;a:7:{s:6:"header";s:51:"function addPathToFileName($fileName, $path = '') {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:428:"

Adds a path in front of the file name.
This is used for files that are selected in the Flexform of the front-end plugin.

If no path is provided, the default (uploads/[extension_name]/) is used as path.

An example (default, with no path provided):
If the file is named 'template.tmpl', the output will be 'uploads/[extension_name]/template.tmpl'.
The '[extension_name]' will be replaced by the name of the calling extension.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:13:"the file name";}i:1;a:2:{i:0;s:6:"string";i:1;s:128:"the path to the file (without filename), must contain a slash at the end, may contain a slash at the beginning (if not relative)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:37:"the complete path including file name";}s:6:"access";s:7:"private";}s:7:"content";s:0:"";s:12:"content_size";i:108;s:13:"content_lines";i:7;s:6:"atLine";i:428;}i:23;a:7:{s:6:"header";s:104:"function getConfValueString($fieldName, $sheet = 'sDEF', $isFileName = false, $ignoreFlexform = false) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:232:"

Gets a trimmed string value from flexforms or TS setup.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is returned. If there is no field with that name in TS setup,
an empty string is returned.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:64:"whether this is a filename, which has to be combined with a path";}i:3;a:2:{i:0;s:7:"boolean";i:1;s:93:"whether to ignore the flexform values and just get the settings from TypoScript, may be empty";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:81:"the trimmed value of the corresponding flexforms or TS setup entry (may be empty)";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:91;s:13:"content_lines";i:3;s:6:"atLine";i:449;}i:25;a:7:{s:6:"header";s:83:"function hasConfValueString($fieldName, $sheet = 'sDEF', $ignoreFlexform = false) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:230:"

Checks whether a string value from flexforms or TS setup is set.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is checked. If there is no field with that name in TS setup,
false is returned.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:93:"whether to ignore the flexform values and just get the settings from TypoScript, may be empty";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:83:"whether there is a non-empty value in the corresponding flexforms or TS setup entry";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:93;s:13:"content_lines";i:3;s:6:"atLine";i:465;}i:27;a:7:{s:6:"header";s:59:"function getConfValueInteger($fieldName, $sheet = 'sDEF') {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:215:"

Gets an integer value from flexforms or TS setup.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is returned. If there is no field with that name in TS setup,
zero is returned.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:67:"the inval'ed value of the corresponding flexforms or TS setup entry";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:63;s:13:"content_lines";i:3;s:6:"atLine";i:480;}i:29;a:7:{s:6:"header";s:59:"function hasConfValueInteger($fieldName, $sheet = 'sDEF') {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:245:"

Checks whether an integer value from flexforms or TS setup is set and non-zero.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is checked. If there is no field with that name in TS setup,
false is returned.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:82:"whether there is a non-zero value in the corresponding flexforms or TS setup entry";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:72;s:13:"content_lines";i:3;s:6:"atLine";i:495;}i:31;a:7:{s:6:"header";s:59:"function getConfValueBoolean($fieldName, $sheet = 'sDEF') {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:215:"

Gets a boolean value from flexforms or TS setup.
The priority lies on flexforms; if nothing is found there, the value
from TS setup is returned. If there is no field with that name in TS setup,
false is returned.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"field name to extract";}i:1;a:2:{i:0;s:6:"string";i:1;s:25:"sheet pointer, eg. "sDEF"";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:66:"the boolean value of the corresponding flexforms or TS setup entry";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:65;s:13:"content_lines";i:3;s:6:"atLine";i:510;}i:33;a:7:{s:6:"header";s:49:"function getListViewConfValueString($fieldName) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:36:"

Extracts a value within listView.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:68:"TS setup field name to extract (within listView.), must not be empty";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:66:"the trimmed contents of that field within listView. (may be empty)";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:192;s:13:"content_lines";i:9;s:6:"atLine";i:521;}i:35;a:7:{s:6:"header";s:23:"function isLoggedIn() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:48:"

Checks whether a front-end user is logged in.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:44:"true if a user is logged in, false otherwise";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:87;s:13:"content_lines";i:3;s:6:"atLine";i:537;}i:37;a:7:{s:6:"header";s:27:"function retrieveFEUser() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:169:"

If a user logged in, retrieves that user's data as stored in the
table "feusers" and stores it in $this->feuser.

If no user is logged in, $this->feuser will be null.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:7:"private";}s:7:"content";s:0:"";s:12:"content_size";i:85;s:13:"content_lines";i:3;s:6:"atLine";i:550;}i:39;a:7:{s:6:"header";s:25:"function getFeUserUid() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:86:"

Returns the UID of the currently logged-in FE user
or 0 if no FE user is logged in.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:64:"the UID of the logged-in FE user or 0 if no FE user is logged in";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:197;s:13:"content_lines";i:9;s:6:"atLine";i:561;}i:41;a:7:{s:6:"header";s:87:"function populateList($items, $tableName, $queryParameter = '1=1', $appendBr = false) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:179:"

Provides data items from the DB.

By default, the field "title" is used as the name that will be returned
within the array (as caption). For FE users, the field "name" is used.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:5:"array";i:1;s:68:"array that contains any pre-filled data (may be empty, but not null)";}i:1;a:2:{i:0;s:6:"string";i:1;s:23:"the table name to query";}i:2;a:2:{i:0;s:6:"string";i:1;s:70:"query parameter that will be used as the WHERE clause (may be omitted)";}i:3;a:2:{i:0;s:6:"string";i:1;s:53:"whether to append a <br /> at the end of each caption";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:171:"$items with additional items from the $params['what'] table as an array with the keys "caption" (for the title) and "value" (for the uid), might be empty, will not be null";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:805;s:13:"content_lines";i:36;s:6:"atLine";i:584;}i:43;a:7:{s:6:"header";s:31:"function getCurrentBePageId() {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:55:"

Gets the ID of the currently selected back-end page.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:56:"the current back-end page ID (or 0 if there is an error)";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:44;s:13:"content_lines";i:3;s:6:"atLine";i:627;}i:45;a:7:{s:6:"header";s:102:"function enableFields($table, $show_hidden = -1, $ignore_array = array(), $noVersionPreview = false) {";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:4:{s:4:"text";s:1001:"

Wrapper function for t3lib_pageSelect::enableFields() since it is no longer
accessible statically.

Returns a part of a WHERE clause which will filter out records with start/end
times or deleted/hidden/fe_groups fields set to values that should de-select
them according to the current time, preview settings or user login.
Is using the $TCA arrays "ctrl" part where the key "enablefields" determines
for each table which of these features applies to that table.

						records are ignored. NOTICE: If you call this function,
						consider what to do with the show_hidden parameter.
						Maybe it should be set? See tslib_cObj->enableFields
						where it's implemented correctly.
						"starttime", "endtime", "fe_group" (keys from
						"enablefields" in TCA) and if set they will make sure
						that part of the clause is not added. Thus disables
						the specific part of the clause. For previewing etc.
						any versioning preview settings which might otherwise
						disable enableFields.
";s:5:"param";a:4:{i:0;a:2:{i:0;s:6:"string";i:1;s:34:"table name found in the $TCA array";}i:1;a:2:{i:0;s:7:"integer";i:1;s:50:"If $show_hidden is set (0/1), any hidden-fields in";}i:2;a:2:{i:0;s:5:"array";i:1;s:48:"Array you can pass where keys can be "disabled",";}i:3;a:2:{i:0;s:7:"boolean";i:1;s:50:"If set, enableFields will be applied regardless of";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:51:"the clause starting like " AND ...=... AND ...=..."";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:174;s:13:"content_lines";i:9;s:6:"atLine";i:659;}i:47;a:7:{s:6:"header";s:39:"function initializeLanguages($pageId)	{";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:3:{s:4:"text";s:39:"

Initializes page languages and icons
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:42:"$pageId: Page to look up for page overlays";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:524;s:13:"content_lines";i:19;s:6:"atLine";i:675;}i:49;a:7:{s:6:"header";s:42:"function languageFlag($sys_language_uid)	{";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:3:{s:4:"text";s:35:"

Return the icon for the language
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:16:"Sys language uid";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:13:"Language icon";}}s:7:"content";s:0:"";s:12:"content_size";i:270;s:13:"content_lines";i:4;s:6:"atLine";i:701;}i:51;a:4:{s:6:"header";s:29:"function listURL($altId='')	{";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:3:{s:4:"text";s:64:"

Creates the URL to this script, including all relevant GPvars
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:71:"Alternative id value. Enter blank string for the current id ($this->id)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:3:"URL";}}s:6:"atLine";i:712;}i:53;a:7:{s:6:"header";s:46:"function makeLocalizationPanel($table, $row)	{";s:11:"parentClass";s:21:"tx_wseevents_dbplugin";s:4:"cDat";a:3:{s:4:"text";s:33:"

Creates the localization panel
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:9:"The table";}i:1;a:2:{i:0;s:5:"array";i:1;s:52:"The record for which to make the localization panel.";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:50:"Array with key 0/1 with content for column 1 and 2";}}s:7:"content";s:0:"";s:12:"content_size";i:2110;s:13:"content_lines";i:58;s:6:"atLine";i:723;}}}s:14:"MD5_422be4a989";a:4:{s:8:"filename";s:29:"class.tx_wseevents_events.php";s:8:"filesize";i:13729;s:6:"header";a:5:{s:4:"text";s:62:"

Class 'tx_wseevents_events' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:11:{i:1;a:8:{s:6:"header";s:27:"class tx_wseevents_events {";s:5:"class";i:1;s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:5:{s:4:"text";s:62:"

Class 'tx_wseevents_events' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:99;s:13:"content_lines";i:6;s:6:"atLine";i:54;}i:3;a:7:{s:6:"header";s:32:"function tx_wseevents_events() {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:5;s:13:"content_lines";i:2;s:6:"atLine";i:68;}i:5;a:7:{s:6:"header";s:23:"function main($items) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:28:"

This is the main function
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:15;s:13:"content_lines";i:3;s:6:"atLine";i:78;}i:7;a:7:{s:6:"header";s:44:"function getTCAeventDays(&$params, &$pObj) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:3:{s:4:"text";s:25:"

Get list of event days
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:35:"Array of items passed by reference.";}i:1;a:2:{i:0;s:6:"object";i:1;s:76:"The parent object (t3lib_TCEforms / t3lib_transferData depending on context)";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:891;s:13:"content_lines";i:32;s:6:"atLine";i:89;}i:9;a:7:{s:6:"header";s:40:"function getTCAsessionLength(&$params) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:24:"

Get length of seesion
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:35:"Array of items passed by reference.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:900;s:13:"content_lines";i:31;s:6:"atLine";i:129;}i:11;a:7:{s:6:"header";s:41:"function getTCAsessionDefault(&$params) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:29:"

Get default session length
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:35:"Array of items passed by reference.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:315;s:13:"content_lines";i:16;s:6:"atLine";i:168;}i:13;a:7:{s:6:"header";s:35:"function getTCAslotList(&$params) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:34:"

Get list of slots for the event
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:35:"Array of items passed by reference.";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:740;s:13:"content_lines";i:28;s:6:"atLine";i:192;}i:15;a:7:{s:6:"header";s:44:"function getEventInfo($event, $eventpid=0) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:26:"

Get info about an event
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"integer";i:1;s:14:"Id of an event";}i:1;a:2:{i:0;s:7:"integer";i:1;s:47:"Page to search for events if $event is set to 0";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:12:"Event record";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:928;s:13:"content_lines";i:37;s:6:"atLine";i:229;}i:17;a:7:{s:6:"header";s:50:"function getEventSlotList($event, $eventpid = 0) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:33:"

Get list of slots for an event
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:11:"Id of event";}i:1;a:2:{i:0;s:7:"integer";i:1;s:47:"Page to search for events if $event is set to 0";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:27:"List of slots for the event";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1696;s:13:"content_lines";i:69;s:6:"atLine";i:275;}i:19;a:4:{s:6:"header";s:51:"function getEventSlotArray($event, $eventpid = 0) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:32:"

Getlist of slots for an event
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:11:"Id of event";}i:1;a:2:{i:0;s:7:"integer";i:1;s:47:"Page to search for events if $event is set to 0";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:27:"List of slots for the event";}s:6:"access";s:9:"protected";}s:6:"atLine";i:353;}i:21;a:7:{s:6:"header";s:47:"function getEventRooms($event, $eventpid = 0) {";s:11:"parentClass";s:19:"tx_wseevents_events";s:4:"cDat";a:4:{s:4:"text";s:37:"

Get list of room names of an event
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"integer";i:1;s:14:"Id of an event";}i:1;a:2:{i:0;s:7:"integer";i:1;s:47:"Page to search for events if $event is set to 0";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:18:"List of room names";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:2031;s:13:"content_lines";i:75;s:6:"atLine";i:449;}}}s:14:"MD5_529eff9393";a:4:{s:8:"filename";s:28:"class.tx_wseevents_rooms.php";s:8:"filesize";i:5329;s:6:"header";a:5:{s:4:"text";s:61:"

Class 'tx_wseevents_rooms' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:4:{i:1;a:8:{s:6:"header";s:26:"class tx_wseevents_rooms {";s:5:"class";i:1;s:11:"parentClass";s:18:"tx_wseevents_rooms";s:4:"cDat";a:5:{s:4:"text";s:61:"

Class 'tx_wseevents_rooms' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:57;s:13:"content_lines";i:3;s:6:"atLine";i:53;}i:3;a:7:{s:6:"header";s:31:"function tx_wseevents_rooms() {";s:11:"parentClass";s:18:"tx_wseevents_rooms";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:5;s:13:"content_lines";i:2;s:6:"atLine";i:64;}i:5;a:4:{s:6:"header";s:23:"function main($items) {";s:11:"parentClass";s:18:"tx_wseevents_rooms";s:4:"cDat";a:4:{s:4:"text";s:28:"

This is the main function
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:6:"atLine";i:74;}i:7;a:7:{s:6:"header";s:36:"function getTCAroomlist($PA,$fobj) {";s:11:"parentClass";s:18:"tx_wseevents_rooms";s:4:"cDat";a:4:{s:4:"text";s:30:"

Get list of available rooms
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}i:1;a:2:{i:0;s:6:"object";i:1;s:31:"$fobj: ToDo: insert description";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:3050;s:13:"content_lines";i:106;s:6:"atLine";i:86;}}}s:14:"MD5_0f396ce271";a:4:{s:8:"filename";s:31:"class.tx_wseevents_speakers.php";s:8:"filesize";i:2441;s:6:"header";a:5:{s:4:"text";s:64:"

Class 'tx_wseevents_speakers' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:3:{i:1;a:8:{s:6:"header";s:59:"class tx_wseevents_speakers extends tx_wseevents_dbplugin {";s:5:"class";i:1;s:11:"parentClass";s:21:"tx_wseevents_speakers";s:4:"cDat";a:5:{s:4:"text";s:64:"

Class 'tx_wseevents_speakers' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:57;s:13:"content_lines";i:3;s:6:"atLine";i:54;}i:3;a:4:{s:6:"header";s:34:"function tx_wseevents_speakers() {";s:11:"parentClass";s:21:"tx_wseevents_speakers";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:6:"atLine";i:65;}i:5;a:7:{s:6:"header";s:23:"function main($items) {";s:11:"parentClass";s:21:"tx_wseevents_speakers";s:4:"cDat";a:4:{s:4:"text";s:28:"

This is the main function
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:250;s:13:"content_lines";i:10;s:6:"atLine";i:76;}}}s:14:"MD5_93bfd06663";a:4:{s:8:"filename";s:36:"class.tx_wseevents_tcemainprocdm.php";s:8:"filesize";i:4576;s:6:"header";a:5:{s:4:"text";s:69:"

Class 'tx_wseevents_tcemainprocdm' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:3:{i:1;a:8:{s:6:"header";s:34:"class tx_wseevents_tcemainprocdm {";s:5:"class";i:1;s:11:"parentClass";s:26:"tx_wseevents_tcemainprocdm";s:4:"cDat";a:5:{s:4:"text";s:69:"

Class 'tx_wseevents_tcemainprocdm' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:34;}i:3;a:4:{s:6:"header";s:97:"function processDatamap_postProcessFieldArray ($status, $table, $id, &$fieldArray, &$reference) {";s:11:"parentClass";s:26:"tx_wseevents_tcemainprocdm";s:4:"cDat";a:3:{s:4:"text";s:34:"

Post processiong of field array
";s:5:"param";a:5:{i:0;a:2:{i:0;s:6:"string";i:1;s:20:"$status: edit status";}i:1;a:2:{i:0;s:6:"string";i:1;s:18:"$table: table name";}i:2;a:2:{i:0;s:7:"integer";i:1;s:14:"$id: record id";}i:3;a:2:{i:0;s:5:"array";i:1;s:32:"$incomingFieldArray: record data";}i:4;a:2:{i:0;s:5:"array";i:1;s:36:"$reference: ToDo: insert description";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:6:"atLine";i:46;}i:5;a:7:{s:6:"header";s:94:"function processDatamap_preProcessFieldArray ($incomingFieldArray, $table, $id, &$reference) {";s:11:"parentClass";s:26:"tx_wseevents_tcemainprocdm";s:4:"cDat";a:3:{s:4:"text";s:33:"

Pre processiong of field array
";s:5:"param";a:4:{i:0;a:2:{i:0;s:5:"array";i:1;s:32:"$incomingFieldArray: record data";}i:1;a:2:{i:0;s:6:"string";i:1;s:18:"$table: table name";}i:2;a:2:{i:0;s:7:"integer";i:1;s:14:"$id: record id";}i:3;a:2:{i:0;s:5:"array";i:1;s:31:"$this: ToDo: insert description";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:512;s:13:"content_lines";i:14;s:6:"atLine";i:114;}}}s:14:"MD5_678a8655c4";a:4:{s:8:"filename";s:32:"class.tx_wseevents_timeslots.php";s:8:"filesize";i:11536;s:6:"header";a:5:{s:4:"text";s:65:"

Class 'tx_wseevents_timeslots' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:6:{i:1;a:8:{s:6:"header";s:30:"class tx_wseevents_timeslots {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:5:{s:4:"text";s:65:"

Class 'tx_wseevents_timeslots' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:57;s:13:"content_lines";i:3;s:6:"atLine";i:57;}i:3;a:7:{s:6:"header";s:35:"function tx_wseevents_timeslots() {";s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:3:{s:4:"text";s:94:"

Dummy constructor: Does nothing.

The base classe's constructor is called in $this->init().
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:5;s:13:"content_lines";i:2;s:6:"atLine";i:68;}i:5;a:7:{s:6:"header";s:23:"function main($items) {";s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:4:{s:4:"text";s:28:"

This is the main function
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:16;s:13:"content_lines";i:4;s:6:"atLine";i:78;}i:7;a:7:{s:6:"header";s:31:"function formatSlotName($row) {";s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:4:{s:4:"text";s:33:"

Format the name of a time slot
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:20:"Recoord data of slot";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:27:"Localized name of time slot";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:624;s:13:"content_lines";i:17;s:6:"atLine";i:90;}i:9;a:4:{s:6:"header";s:31:"function getSlotName($slotid) {";s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:4:{s:4:"text";s:40:"

Get the localized name of a time slot
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:10:"Id of slot";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:27:"Localized name of time slot";}s:6:"access";s:9:"protected";}s:6:"atLine";i:115;}i:11;a:7:{s:6:"header";s:36:"function getTCAavailableSlots($PA) {";s:11:"parentClass";s:22:"tx_wseevents_timeslots";s:4:"cDat";a:4:{s:4:"text";s:35:"

Get list of available time slots
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:39:"TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:7716;s:13:"content_lines";i:258;s:6:"atLine";i:137;}}}s:14:"MD5_b50249a27e";a:4:{s:8:"filename";s:39:"mod1/class.tx_wseevents_backendlist.php";s:8:"filesize";i:9212;s:6:"header";a:5:{s:4:"text";s:181:"

Class 'tx_wseevents_backendlist' for the 'wse_events' extension.
Adapted from subpackage 'tx_seminars' for use by the 'wse_events' extension by Michael Oehlhof <typo3@oehlhof.de>
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:44:"@author		Niels Pardon <mail@niels-pardon.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:35:"Niels Pardon <mail@niels-pardon.de>";}}}s:3:"DAT";a:8:{i:1;a:8:{s:6:"header";s:62:"class tx_wseevents_backendlist extends tx_wseevents_dbplugin {";s:5:"class";i:1;s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:5:{s:4:"text";s:181:"

Class 'tx_wseevents_backendlist' for the 'wse_events' extension.
Adapted from subpackage 'tx_seminars' for use by the 'wse_events' extension by Michael Oehlhof <typo3@oehlhof.de>
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:44:"@author		Niels Pardon <mail@niels-pardon.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:35:"Niels Pardon <mail@niels-pardon.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:328;s:13:"content_lines";i:17;s:6:"atLine";i:42;}i:3;a:7:{s:6:"header";s:43:"function tx_wseevents_backendlist(&$page) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:107:"

The constructor. Sets the table name and the back-end page object.
Loads an array with system languages.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:270;s:13:"content_lines";i:12;s:6:"atLine";i:68;}i:5;a:7:{s:6:"header";s:36:"function getPidTitleList($pidList) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:66:"

Generates a list of titles of all pages for the given pid list.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:16:"the list of pids";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:23:"the list of page titles";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:190;s:13:"content_lines";i:8;s:6:"atLine";i:88;}i:7;a:7:{s:6:"header";s:28:"function getEditIcon($uid) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:78:"

Generates an edit record icon which is linked to the edit view of
a record.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the uid of the record";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:30:"the HTML source code to return";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:679;s:13:"content_lines";i:22;s:6:"atLine";i:106;}i:9;a:7:{s:6:"header";s:30:"function getDeleteIcon($uid) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:80:"

Generates a linked delete record icon whith a JavaScript confirmation
window.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the uid of the record";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:30:"the HTML source code to return";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:1152;s:13:"content_lines";i:39;s:6:"atLine";i:138;}i:11;a:7:{s:6:"header";s:40:"function getNewIcon($pid, $usediv = 1) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:81:"

Returns a "create new record" image tag that is linked to the new record view.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"integer";i:1;s:45:"the page id where the record should be stored";}i:1;a:2:{i:0;s:7:"integer";i:1;s:55:"flag to choose div tags (1) instead of span tags (<> 1)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:30:"the HTML source code to return";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:1222;s:13:"content_lines";i:38;s:6:"atLine";i:186;}i:13;a:4:{s:6:"header";s:47:"function getNewIconList($pidList, $pidTitles) {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:91:"

Returns a list of "create new record" image tags that are linked to the new record view.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:56:"the list with page ids where the record should be stored";}i:1;a:2:{i:0;s:5:"array";i:1;s:48:"array with page titles for all pages in $pidList";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:30:"the HTML source code to return";}s:6:"access";s:6:"public";}s:6:"atLine";i:233;}i:15;a:7:{s:6:"header";s:46:"function editNewUrl($params, $backPath = '') {";s:11:"parentClass";s:24:"tx_wseevents_backendlist";s:4:"cDat";a:4:{s:4:"text";s:79:"

Returns the url for the "create new record" link and the "edit record" link.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:22:"the parameters for tce";}i:1;a:2:{i:0;s:6:"string";i:1;s:37:"the back-path to the /typo3 directory";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:17:"the url to return";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:398;s:13:"content_lines";i:12;s:6:"atLine";i:272;}}}s:14:"MD5_1df7b60978";a:4:{s:8:"filename";s:42:"mod1/class.tx_wseevents_categorieslist.php";s:8:"filesize";i:9927;s:6:"header";a:5:{s:4:"text";s:70:"

Class 'tx_wseevents_categorieslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:5:{i:1;a:8:{s:6:"header";s:67:"class tx_wseevents_categorieslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:27:"tx_wseevents_categorieslist";s:4:"cDat";a:5:{s:4:"text";s:70:"

Class 'tx_wseevents_categorieslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:40;s:13:"content_lines";i:4;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:46:"function tx_wseevents_categorieslist(&$page) {";s:11:"parentClass";s:27:"tx_wseevents_categorieslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:117;s:13:"content_lines";i:5;s:6:"atLine";i:53;}i:5;a:7:{s:6:"header";s:39:"function addRowToTable(&$table, $row) {";s:11:"parentClass";s:27:"tx_wseevents_categorieslist";s:4:"cDat";a:3:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:47:"the table where the record data is to be addded";}i:1;a:2:{i:0;s:5:"array";i:1;s:18:"the current record";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:902;s:13:"content_lines";i:38;s:6:"atLine";i:66;}i:7;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:27:"tx_wseevents_categorieslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:111;}i:9;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:27:"tx_wseevents_categorieslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1133;s:13:"content_lines";i:37;s:6:"atLine";i:287;}}}s:14:"MD5_3e629e5709";a:4:{s:8:"filename";s:38:"mod1/class.tx_wseevents_eventslist.php";s:8:"filesize";i:11115;s:6:"header";a:5:{s:4:"text";s:66:"

Class 'tx_wseevents_eventslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:5:{i:1;a:8:{s:6:"header";s:63:"class tx_wseevents_eventslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:23:"tx_wseevents_eventslist";s:4:"cDat";a:5:{s:4:"text";s:66:"

Class 'tx_wseevents_eventslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:42:"function tx_wseevents_eventslist(&$page) {";s:11:"parentClass";s:23:"tx_wseevents_eventslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:113;s:13:"content_lines";i:5;s:6:"atLine";i:50;}i:5;a:7:{s:6:"header";s:39:"function addRowToTable(&$table, $row) {";s:11:"parentClass";s:23:"tx_wseevents_eventslist";s:4:"cDat";a:3:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:47:"the table where the record data is to be addded";}i:1;a:2:{i:0;s:5:"array";i:1;s:18:"the current record";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:1070;s:13:"content_lines";i:39;s:6:"atLine";i:63;}i:7;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:23:"tx_wseevents_eventslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:109;}i:9;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:23:"tx_wseevents_eventslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1125;s:13:"content_lines";i:37;s:6:"atLine";i:311;}}}s:14:"MD5_df3daacf5f";a:4:{s:8:"filename";s:41:"mod1/class.tx_wseevents_locationslist.php";s:8:"filesize";i:9686;s:6:"header";a:5:{s:4:"text";s:54:"

Class 'events list' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:5:{i:1;a:8:{s:6:"header";s:66:"class tx_wseevents_locationslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:26:"tx_wseevents_locationslist";s:4:"cDat";a:5:{s:4:"text";s:54:"

Class 'events list' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:45:"function tx_wseevents_locationslist(&$page) {";s:11:"parentClass";s:26:"tx_wseevents_locationslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:173;s:13:"content_lines";i:9;s:6:"atLine";i:50;}i:5;a:7:{s:6:"header";s:39:"function addRowToTable(&$table, $row) {";s:11:"parentClass";s:26:"tx_wseevents_locationslist";s:4:"cDat";a:3:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:47:"the table where the record data is to be addded";}i:1;a:2:{i:0;s:5:"array";i:1;s:18:"the current record";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:887;s:13:"content_lines";i:36;s:6:"atLine";i:67;}i:7;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:26:"tx_wseevents_locationslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:110;}i:9;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:26:"tx_wseevents_locationslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1131;s:13:"content_lines";i:37;s:6:"atLine";i:282;}}}s:14:"MD5_8b1cd1232c";a:4:{s:8:"filename";s:37:"mod1/class.tx_wseevents_roomslist.php";s:8:"filesize";i:9530;s:6:"header";a:5:{s:4:"text";s:65:"

Class 'tx_wseevents_roomslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:4:{i:1;a:8:{s:6:"header";s:62:"class tx_wseevents_roomslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_wseevents_roomslist";s:4:"cDat";a:5:{s:4:"text";s:65:"

Class 'tx_wseevents_roomslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:41:"function tx_wseevents_roomslist(&$page) {";s:11:"parentClass";s:22:"tx_wseevents_roomslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:112;s:13:"content_lines";i:5;s:6:"atLine";i:50;}i:5;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:22:"tx_wseevents_roomslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:62;}i:7;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:22:"tx_wseevents_roomslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1123;s:13:"content_lines";i:37;s:6:"atLine";i:270;}}}s:14:"MD5_ee3aedc284";a:4:{s:8:"filename";s:40:"mod1/class.tx_wseevents_sessionslist.php";s:8:"filesize";i:13514;s:6:"header";a:5:{s:4:"text";s:67:"

Class 'tx_wseevents_sesionslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:5:{i:1;a:8:{s:6:"header";s:65:"class tx_wseevents_sessionslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:25:"tx_wseevents_sessionslist";s:4:"cDat";a:5:{s:4:"text";s:67:"

Class 'tx_wseevents_sesionslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:95;s:13:"content_lines";i:7;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:44:"function tx_wseevents_sessionslist(&$page) {";s:11:"parentClass";s:25:"tx_wseevents_sessionslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:203;s:13:"content_lines";i:11;s:6:"atLine";i:56;}i:5;a:7:{s:6:"header";s:39:"function addRowToTable(&$table, $row) {";s:11:"parentClass";s:25:"tx_wseevents_sessionslist";s:4:"cDat";a:3:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:47:"the table where the record data is to be addded";}i:1;a:2:{i:0;s:5:"array";i:1;s:18:"the current record";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:1056;s:13:"content_lines";i:38;s:6:"atLine";i:75;}i:7;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:25:"tx_wseevents_sessionslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:120;}i:9;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:25:"tx_wseevents_sessionslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1129;s:13:"content_lines";i:37;s:6:"atLine";i:396;}}}s:14:"MD5_02816db711";a:4:{s:8:"filename";s:51:"mod1/class.tx_wseevents_speakerrestrictionslist.php";s:8:"filesize";i:11869;s:6:"header";a:5:{s:4:"text";s:79:"

Class 'tx_wseevents_speakerrestrictionslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:4:{i:1;a:8:{s:6:"header";s:76:"class tx_wseevents_speakerrestrictionslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:36:"tx_wseevents_speakerrestrictionslist";s:4:"cDat";a:5:{s:4:"text";s:79:"

Class 'tx_wseevents_speakerrestrictionslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:42;}i:3;a:7:{s:6:"header";s:55:"function tx_wseevents_speakerrestrictionslist(&$page) {";s:11:"parentClass";s:36:"tx_wseevents_speakerrestrictionslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:126;s:13:"content_lines";i:5;s:6:"atLine";i:51;}i:5;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:36:"tx_wseevents_speakerrestrictionslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:63;}i:7;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:36:"tx_wseevents_speakerrestrictionslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1151;s:13:"content_lines";i:37;s:6:"atLine";i:331;}}}s:14:"MD5_38e3019aa3";a:4:{s:8:"filename";s:40:"mod1/class.tx_wseevents_speakerslist.php";s:8:"filesize";i:10104;s:6:"header";a:5:{s:4:"text";s:54:"

Class 'events list' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:5:{i:1;a:8:{s:6:"header";s:65:"class tx_wseevents_speakerslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:25:"tx_wseevents_speakerslist";s:4:"cDat";a:5:{s:4:"text";s:54:"

Class 'events list' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:41;}i:3;a:7:{s:6:"header";s:44:"function tx_wseevents_speakerslist(&$page) {";s:11:"parentClass";s:25:"tx_wseevents_speakerslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:171;s:13:"content_lines";i:8;s:6:"atLine";i:50;}i:5;a:7:{s:6:"header";s:39:"function addRowToTable(&$table, $row) {";s:11:"parentClass";s:25:"tx_wseevents_speakerslist";s:4:"cDat";a:3:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:47:"the table where the record data is to be addded";}i:1;a:2:{i:0;s:5:"array";i:1;s:18:"the current record";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:1050;s:13:"content_lines";i:41;s:6:"atLine";i:66;}i:7;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:25:"tx_wseevents_speakerslist";s:4:"cDat";a:4:{s:4:"text";s:42:"

Generates and prints out an event list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:114;}i:9;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:25:"tx_wseevents_speakerslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1129;s:13:"content_lines";i:37;s:6:"atLine";i:292;}}}s:14:"MD5_e71be59f60";a:4:{s:8:"filename";s:41:"mod1/class.tx_wseevents_timeslotslist.php";s:8:"filesize";i:22191;s:6:"header";a:5:{s:4:"text";s:69:"

Class 'tx_wseevents_timeslotslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:7:{i:1;a:8:{s:6:"header";s:66:"class tx_wseevents_timeslotslist extends tx_wseevents_backendlist{";s:5:"class";i:1;s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:5:{s:4:"text";s:69:"

Class 'tx_wseevents_timeslotslist' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:42;}i:3;a:7:{s:6:"header";s:45:"function tx_wseevents_timeslotslist(&$page) {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:3:{s:4:"text";s:88:"

The constructor. Calls the constructor of the parent class and sets
$this->tableName.
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"object";i:1;s:32:"the current back-end page object";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:116;s:13:"content_lines";i:5;s:6:"atLine";i:51;}i:5;a:7:{s:6:"header";s:27:"function showCreateForm() {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:4:{s:4:"text";s:87:"

Generates and prints out a form for generating many time slot entries in one action.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:32:"the HTML source code of the form";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:3095;s:13:"content_lines";i:77;s:6:"atLine";i:63;}i:7;a:7:{s:6:"header";s:24:"function createSlots() {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:4:{s:4:"text";s:48:"

Creates many time slot entries in one action.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"the HTML source code of the result";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:2255;s:13:"content_lines";i:63;s:6:"atLine";i:147;}i:9;a:7:{s:6:"header";s:24:"function updateSlots() {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:4:{s:4:"text";s:58:"

Update the name of all time slot entries in one action.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"the HTML source code of the result";}s:6:"access";s:6:"public";}s:7:"content";s:0:"";s:12:"content_size";i:2808;s:13:"content_lines";i:86;s:6:"atLine";i:217;}i:11;a:4:{s:6:"header";s:17:"function show() {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:4:{s:4:"text";s:46:"

Generates and prints out an time slot list.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:38:"the HTML source code of the event list";}s:6:"access";s:6:"public";}s:6:"atLine";i:310;}i:13;a:7:{s:6:"header";s:43:"function getHideUnhideIcon($uid, $hidden) {";s:11:"parentClass";s:26:"tx_wseevents_timeslotslist";s:4:"cDat";a:4:{s:4:"text";s:82:"

Generates a linked hide or unhide icon depending on the record's hidden
status.
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:44:"the name of the table where the record is in";}i:1;a:2:{i:0;s:7:"integer";i:1;s:21:"the UID of the record";}i:2;a:2:{i:0;s:7:"boolean";i:1;s:62:"indicates if the record is hidden (true) or is visible (false)";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:54:"the HTML source code of the linked hide or unhide icon";}s:6:"access";s:9:"protected";}s:7:"content";s:0:"";s:12:"content_size";i:1131;s:13:"content_lines";i:37;s:6:"atLine";i:638;}}}s:14:"MD5_19aaeae789";a:4:{s:8:"filename";s:14:"mod1/index.php";s:8:"filesize";i:14081;s:6:"header";a:5:{s:4:"text";s:54:"

Module 'WSE Events' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:25:"@author	 	Michael Oehlhof";i:1;s:15:"@package		TYPO3";i:2;s:22:"@subpackage	wse_events";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:15:"Michael Oehlhof";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}}}s:3:"DAT";a:10:{i:1;a:8:{s:6:"header";s:50:"class  tx_wseevents_module1 extends t3lib_SCbase {";s:5:"class";i:1;s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:5:{s:4:"text";s:54:"

Module 'WSE Events' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:25:"@author	 	Michael Oehlhof";i:1;s:15:"@package		TYPO3";i:2;s:22:"@subpackage	wse_events";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:15:"Michael Oehlhof";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}}}s:7:"content";s:0:"";s:12:"content_size";i:198;s:13:"content_lines";i:11;s:6:"atLine";i:64;}i:3;a:7:{s:6:"header";s:17:"function init()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:25:"

Initializes the Module
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:738;s:13:"content_lines";i:26;s:6:"atLine";i:81;}i:5;a:7:{s:6:"header";s:23:"function menuConfig()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:75:"

Adds items to the ->MOD_MENU array. Used for the function menu selector.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:274;s:13:"content_lines";i:11;s:6:"atLine";i:113;}i:7;a:7:{s:6:"header";s:17:"function main()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:223:"

Main function of the module. Write the content to $this->content
If you chose "web" as main module, you will need to consider the $this->id parameter which will contain the uid-number of the page clicked in the page tree
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:417;s:13:"content_lines";i:7;s:6:"atLine";i:131;}i:9;a:6:{s:6:"header";s:25:"function jumpToUrl(URL)	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:7:"content";s:0:"";s:12:"content_size";i:2087;s:13:"content_lines";i:56;s:6:"atLine";i:153;}i:11;a:7:{s:6:"header";s:25:"function printContent()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:29:"

Prints out the module HTML
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:71;s:13:"content_lines";i:4;s:6:"atLine";i:215;}i:13;a:7:{s:6:"header";s:26:"function moduleContent()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:31:"

Generates the module content
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:227;s:13:"content_lines";i:13;s:6:"atLine";i:225;}i:15;a:7:{s:6:"header";s:31:"function moduleEventContent()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:39:"

Generates the content for event data
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:2722;s:13:"content_lines";i:70;s:6:"atLine";i:244;}i:17;a:4:{s:6:"header";s:32:"function moduleCommonContent()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:40:"

Generates the content for common data
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:6:"atLine";i:320;}i:19;a:7:{s:6:"header";s:34:"function moduleSessionPlanning()	{";s:11:"parentClass";s:20:"tx_wseevents_module1";s:4:"cDat";a:3:{s:4:"text";s:45:"

Generates the content for session planning
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:607;s:13:"content_lines";i:27;s:6:"atLine";i:396;}}}s:14:"MD5_b9b534caa8";a:4:{s:8:"filename";s:30:"pi1/class.tx_wseevents_pi1.php";s:8:"filesize";i:78683;s:6:"header";a:5:{s:4:"text";s:59:"

Class 'tx_wseevents_pi1' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:3:"DAT";a:19:{i:1;a:8:{s:6:"header";s:45:"class tx_wseevents_pi1 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:5:{s:4:"text";s:59:"

Class 'tx_wseevents_pi1' for the 'wse_events' extension.
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:15:"@package		TYPO3";i:1;s:22:"@subpackage	wse_events";i:2;s:43:"@author		Michael Oehlhof <typo3@oehlhof.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:11:"wse_events ";}s:7:"@author";a:1:{i:0;s:34:"Michael Oehlhof <typo3@oehlhof.de>";}}}s:7:"content";s:0:"";s:12:"content_size";i:256;s:13:"content_lines";i:11;s:6:"atLine";i:62;}i:3;a:7:{s:6:"header";s:32:"function main($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:61:"

Main function, decides in which form the data is displayed
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:3044;s:13:"content_lines";i:80;s:6:"atLine";i:81;}i:5;a:7:{s:6:"header";s:43:"function listSessionView($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:81:"

Display a list of sessions for the event that is set in the flex form settings
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:12414;s:13:"content_lines";i:263;s:6:"atLine";i:169;}i:7;a:7:{s:6:"header";s:43:"function listSpeakerView($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:81:"

Display a list of speakers for the event that is set in the flex form settings
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:9685;s:13:"content_lines";i:197;s:6:"atLine";i:440;}i:9;a:7:{s:6:"header";s:44:"function listTimeslotView($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:83:"

Display a list of time slots for the event that is set in the flex form settings
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:24322;s:13:"content_lines";i:576;s:6:"atLine";i:645;}i:11;a:7:{s:6:"header";s:45:"function singleSessionView($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:42:"

Display the details of a single session
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:3238;s:13:"content_lines";i:78;s:6:"atLine";i:1229;}i:13;a:7:{s:6:"header";s:45:"function singleSpeakerView($content, $conf)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:42:"

Display the details of a single speaker
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:40:"$content: default content string, ignore";}i:1;a:2:{i:0;s:5:"array";i:1;s:46:"$conf: TypoScript configuration for the plugin";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"Content for output on the web site";}}s:7:"content";s:0:"";s:12:"content_size";i:5906;s:13:"content_lines";i:129;s:6:"atLine";i:1315;}i:15;a:7:{s:6:"header";s:31:"function getFieldContent($fN)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:27:"

Get content of one field
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:15:"$fN: field name";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:13:"field content";}}s:7:"content";s:0:"";s:12:"content_size";i:6706;s:13:"content_lines";i:193;s:6:"atLine";i:1451;}i:17;a:7:{s:6:"header";s:55:"function getTranslatedField($dbname, $fN, $fUid = -1) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:91:"

Get the translated content of a field
Returns english content if no translation is found
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:19:"$dbname: table name";}i:1;a:2:{i:0;s:6:"string";i:1;s:15:"$fN: field name";}i:2;a:2:{i:0;s:7:"integer";i:1;s:16:"$fUid: record id";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:24:"translated field content";}}s:7:"content";s:0:"";s:12:"content_size";i:1194;s:13:"content_lines";i:38;s:6:"atLine";i:1654;}i:19;a:7:{s:6:"header";s:55:"function getTranslatedCategory($dbname, $rowuid, $fN) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:88:"

Get the translated name of a category
Returns english name if no translation is found
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:19:"$dbname: table name";}i:1;a:2:{i:0;s:7:"integer";i:1;s:18:"$rowuid: record id";}i:2;a:2:{i:0;s:6:"string";i:1;s:15:"$fN: field name";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:24:"translated category name";}}s:7:"content";s:0:"";s:12:"content_size";i:593;s:13:"content_lines";i:24;s:6:"atLine";i:1702;}i:21;a:7:{s:6:"header";s:55:"function getSpeakerSessionList($speakerid, $eventPid) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:43:"

Get list of session UIDs for the speaker
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"integer";i:1;s:22:"$speakerid: speaker id";}i:1;a:2:{i:0;s:7:"integer";i:1;s:46:"$eventPid: id of system folder with event data";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:48:"comma seperated list of sessions for the speaker";}}s:7:"content";s:0:"";s:12:"content_size";i:619;s:13:"content_lines";i:23;s:6:"atLine";i:1734;}i:23;a:7:{s:6:"header";s:30:"function getFieldHeader($fN)	{";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:25:"

Get label of one field
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:15:"$fN: field name";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:20:"header for the field";}}s:7:"content";s:0:"";s:12:"content_size";i:156;s:13:"content_lines";i:10;s:6:"atLine";i:1764;}i:25;a:7:{s:6:"header";s:31:"function getEventInfo($event) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:26:"

Get info about an event
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:19:"$event: id of event";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:20:"record data of event";}}s:7:"content";s:0:"";s:12:"content_size";i:381;s:13:"content_lines";i:8;s:6:"atLine";i:1781;}i:27;a:7:{s:6:"header";s:35:"function getLocationInfo($loc_id) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:28:"

Get info about a location
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:23:"$loc_id: id of location";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:23:"record data of location";}}s:7:"content";s:0:"";s:12:"content_size";i:328;s:13:"content_lines";i:8;s:6:"atLine";i:1796;}i:29;a:7:{s:6:"header";s:31:"function getRoomInfo($loc_id) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:38:"

Get info about rooms of an location
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:23:"$loc_id: id of location";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:49:"array with record data of all rooms of a location";}}s:7:"content";s:0:"";s:12:"content_size";i:403;s:13:"content_lines";i:12;s:6:"atLine";i:1811;}i:31;a:7:{s:6:"header";s:59:"function getSlot($event, $day, $room, $slot, $showdbgsql) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:70:"

Get id of record from time slot for given event, day, room and slot
";s:5:"param";a:5:{i:0;a:2:{i:0;s:7:"integer";i:1;s:19:"$event: id of event";}i:1;a:2:{i:0;s:7:"integer";i:1;s:29:"$day: number of the event day";}i:2;a:2:{i:0;s:7:"integer";i:1;s:40:"$room: number of the event location room";}i:3;a:2:{i:0;s:7:"integer";i:1;s:26:"$slot: number of time slot";}i:4;a:2:{i:0;s:7:"integer";i:1;s:51:"$showdbgsql: flag to show debug output of SQL query";}}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:29:"id of slot if a slot is found";}}s:7:"content";s:0:"";s:12:"content_size";i:619;s:13:"content_lines";i:15;s:6:"atLine";i:1834;}i:33;a:7:{s:6:"header";s:34:"function getSlotLength($slot_id) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:40:"

Get length of time slot for given uid
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:26:"$slot_id: id of a tme slot";}}s:6:"return";a:2:{i:0;s:7:"integer";i:1;s:21:"length of a time slot";}}s:7:"content";s:0:"";s:12:"content_size";i:301;s:13:"content_lines";i:9;s:6:"atLine";i:1856;}i:35;a:4:{s:6:"header";s:35:"function getSlotSession($slot_id) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:34:"

Get session data for given slot
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:27:"$slot_id: id of a time slot";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:33:"array with record of session data";}}s:6:"atLine";i:1872;}i:37;a:7:{s:6:"header";s:40:"function getSpeakerNames($speakerlist) {";s:11:"parentClass";s:16:"tx_wseevents_pi1";s:4:"cDat";a:3:{s:4:"text";s:47:"

Get speaker names for a list of speaker id's
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"integer";i:1;s:34:"$speakerlist: list of speaker id's";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:28:"string with list of speakers";}}s:7:"content";s:0:"";s:12:"content_size";i:986;s:13:"content_lines";i:31;s:6:"atLine";i:1902;}}}}}